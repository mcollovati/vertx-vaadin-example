buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url 'https://software.r3.com/artifactory/corda' }
        maven { url 'https://jitpack.io' }
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_plugin_version"
        classpath "net.corda.plugins:cordapp:$corda_plugins_version"
        classpath "net.corda.plugins:cordformation:$corda_plugins_version"
        classpath "net.corda.plugins:quasar-utils:$corda_plugins_version"
        classpath "com.vaadin:vaadin-gradle-plugin:0.7.0"
    }
}

plugins {
    id 'io.vertx.vertx-plugin' version '1.1.1'
}

apply plugin: 'kotlin'
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.quasar-utils'
apply plugin: 'idea'
apply plugin: "com.vaadin"

defaultTasks("clean", "vaadinBuildFrontend", "build")

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
    jcenter()
}

// example of how to configure the Gradle Vaadin Plugin
vaadin {
    pnpmEnable = true
}

vertx {
    mainVerticle = "com.github.mcollovati.vertx.vaadin.VaadinVerticle"
    vertxVersion = "3.9.1"
}

configurations {
    compile.exclude group: "com.vaadin", module: "flow-push"
    compile.exclude group: "com.vaadin", module: "flow-client"
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "org.jetbrains.kotlin:kotlin-reflect"
    compile 'io.vertx:vertx-lang-kotlin'
    compile "com.vaadin:vaadin-bom:$vaadin_version"
    runtimeOnly "jakarta.servlet:jakarta.servlet-api:4.0.2"
    runtimeOnly "com.github.mcollovati.vertx:vertx-vaadin-flow:$vertx_vaadin_version"
    runtimeOnly "com.github.mcollovati.vertx:vaadin-flow-sockjs:$vertx_vaadin_version"
    implementation "org.slf4j:slf4j-simple:1.7.30"

    // Vaadin 14
    compile("com.vaadin:vaadin-core:$vaadin_version") {
        //Webjars are only needed when running in Vaadin 13 compatibility mode
        ["com.vaadin.webjar", "org.webjars.bowergithub.insites",
         "org.webjars.bowergithub.polymer", "org.webjars.bowergithub.polymerelements",
         "org.webjars.bowergithub.vaadin", "org.webjars.bowergithub.webcomponents"]
                .forEach { group -> exclude(group: group) }
    }
}

task productionBuild {
    group = "Build"
    description = "Build production fat jar"
    dependsOn "vaadinBuildFrontend", "vaadinBuildFrontend", "shadowJar"
    ext.setProperty("vaadin.productionMode", "true")
}
